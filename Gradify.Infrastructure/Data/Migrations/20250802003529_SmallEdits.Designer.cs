// <auto-generated />
using System;
using Gradify.Infrastructure.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Gradify.Infrastructure.Data.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250802003529_SmallEdits")]
    partial class SmallEdits
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Gradify.Core.Models.Course", b =>
                {
                    b.Property<string>("Code")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int>("CreditHrs")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("State")
                        .HasColumnType("int");

                    b.HasKey("Code");

                    b.ToTable("Courses");
                });

            modelBuilder.Entity("Gradify.Core.Models.Exam", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<double>("DisplayMarks")
                        .HasColumnType("float");

                    b.Property<bool>("IsAbsent")
                        .HasColumnType("bit");

                    b.Property<bool>("IsSame")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<double>("RealMarks")
                        .HasColumnType("float");

                    b.Property<int?>("RegistrationAID")
                        .HasColumnType("int");

                    b.Property<int?>("RegistrationID")
                        .HasColumnType("int");

                    b.Property<int>("State")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RegistrationAID");

                    b.HasIndex("RegistrationID");

                    b.ToTable("Exams");
                });

            modelBuilder.Entity("Gradify.Core.Models.Registration", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CourseCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)");

                    b.Property<double>("FinalMarks")
                        .HasColumnType("float");

                    b.Property<string>("Grade")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<bool>("IsAbsentFinal")
                        .HasColumnType("bit");

                    b.Property<DateTime>("RegistrationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("SemesterName")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("StudentId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CourseCode");

                    b.HasIndex("SemesterName");

                    b.HasIndex("StudentId");

                    b.ToTable("Registration");
                });

            modelBuilder.Entity("Gradify.Core.Models.RegistrationArchive", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CourseCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)");

                    b.Property<double>("FinalMarks")
                        .HasColumnType("float");

                    b.Property<string>("Grade")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<bool>("IsAbsentFinal")
                        .HasColumnType("bit");

                    b.Property<DateTime>("RegistrationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("SemesterName")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("StudentId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CourseCode");

                    b.HasIndex("SemesterName");

                    b.HasIndex("StudentId");

                    b.ToTable("RegistrationArchives");
                });

            modelBuilder.Entity("Gradify.Core.Models.Semester", b =>
                {
                    b.Property<string>("SemesterName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("State")
                        .HasColumnType("int");

                    b.HasKey("SemesterName");

                    b.ToTable("Semesters");
                });

            modelBuilder.Entity("Gradify.Core.Models.SemesterCourseSettings", b =>
                {
                    b.Property<string>("CourseCode")
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("SemesterName")
                        .HasColumnType("nvarchar(50)");

                    b.Property<double>("CourseWorkValue")
                        .HasColumnType("float");

                    b.Property<double>("FinalValue")
                        .HasColumnType("float");

                    b.Property<int>("State")
                        .HasColumnType("int");

                    b.HasKey("CourseCode", "SemesterName");

                    b.HasIndex("SemesterName");

                    b.ToTable("SemesterCourseSettings");
                });

            modelBuilder.Entity("Gradify.Core.Models.Student", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<double>("CGPA")
                        .HasColumnType("float");

                    b.Property<int>("CurrentPoints")
                        .HasColumnType("int");

                    b.Property<DateTime>("LastCalculationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("NetHrs")
                        .HasColumnType("int");

                    b.Property<int>("State")
                        .HasColumnType("int");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Students");
                });

            modelBuilder.Entity("Gradify.Core.Models.Exam", b =>
                {
                    b.HasOne("Gradify.Core.Models.RegistrationArchive", "RegistrationArchive")
                        .WithMany("Exams")
                        .HasForeignKey("RegistrationAID")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Gradify.Core.Models.Registration", "Registration")
                        .WithMany("Exams")
                        .HasForeignKey("RegistrationID")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Registration");

                    b.Navigation("RegistrationArchive");
                });

            modelBuilder.Entity("Gradify.Core.Models.Registration", b =>
                {
                    b.HasOne("Gradify.Core.Models.Course", "Course")
                        .WithMany("Registrations")
                        .HasForeignKey("CourseCode")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Gradify.Core.Models.Semester", "Semester")
                        .WithMany("Registrations")
                        .HasForeignKey("SemesterName")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Gradify.Core.Models.Student", "Student")
                        .WithMany("Registrations")
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Course");

                    b.Navigation("Semester");

                    b.Navigation("Student");
                });

            modelBuilder.Entity("Gradify.Core.Models.RegistrationArchive", b =>
                {
                    b.HasOne("Gradify.Core.Models.Course", "Course")
                        .WithMany("RegistrationArchives")
                        .HasForeignKey("CourseCode")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Gradify.Core.Models.Semester", "Semester")
                        .WithMany("RegistrationArchives")
                        .HasForeignKey("SemesterName")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Gradify.Core.Models.Student", "Student")
                        .WithMany("RegistrationArchives")
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Course");

                    b.Navigation("Semester");

                    b.Navigation("Student");
                });

            modelBuilder.Entity("Gradify.Core.Models.SemesterCourseSettings", b =>
                {
                    b.HasOne("Gradify.Core.Models.Course", "Course")
                        .WithMany("SemesterCourseSettings")
                        .HasForeignKey("CourseCode")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Gradify.Core.Models.Semester", "Semester")
                        .WithMany("SemesterCourseSettings")
                        .HasForeignKey("SemesterName")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Course");

                    b.Navigation("Semester");
                });

            modelBuilder.Entity("Gradify.Core.Models.Course", b =>
                {
                    b.Navigation("RegistrationArchives");

                    b.Navigation("Registrations");

                    b.Navigation("SemesterCourseSettings");
                });

            modelBuilder.Entity("Gradify.Core.Models.Registration", b =>
                {
                    b.Navigation("Exams");
                });

            modelBuilder.Entity("Gradify.Core.Models.RegistrationArchive", b =>
                {
                    b.Navigation("Exams");
                });

            modelBuilder.Entity("Gradify.Core.Models.Semester", b =>
                {
                    b.Navigation("RegistrationArchives");

                    b.Navigation("Registrations");

                    b.Navigation("SemesterCourseSettings");
                });

            modelBuilder.Entity("Gradify.Core.Models.Student", b =>
                {
                    b.Navigation("RegistrationArchives");

                    b.Navigation("Registrations");
                });
#pragma warning restore 612, 618
        }
    }
}
